# Generated by Django 4.1.8 on 2023-04-24 11:16

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('apis_ontology', '0003_auto_20221213_1631'),
    ]

    operations = [
        migrations.AlterField(
            model_name='court',
            name='alternative_label',
            field=models.TextField(blank=True, help_text='Alternativer Name des Hofes.', null=True, verbose_name='Alternativer Name'),
        ),
        migrations.AlterField(
            model_name='court',
            name='type',
            field=models.CharField(blank=True, choices=[('Hof', 'Hof'), ('Klosterhof', 'Klosterhof'), ('Kaiserhof', 'Kaiserhof'), ('Königshof', 'Königshof'), ('Bischöflicher Hof', 'Bischöflicher Hof'), ('Kurfürstlicher Hof', 'Kurfürstlicher Hof'), ('Erzbischöflicher Hof', 'Erzbischöflicher Hof'), ('Königlicher Hof', 'Königlicher Hof'), ('Kaiserlicher Hof', 'Kaiserlicher Hof'), ('Frauenzimmer', 'Frauenzimmer')], help_text='Art des Hofes', max_length=20, verbose_name='Typ'),
        ),
        migrations.AlterField(
            model_name='event',
            name='alternative_label',
            field=models.TextField(blank=True, help_text='Alternativer Name.', null=True, verbose_name='Alternativer Name'),
        ),
        migrations.AlterField(
            model_name='event',
            name='type',
            field=models.CharField(blank=True, choices=[('Hochzeit', 'Hochzeit'), ('Landtag', 'Landtag'), ('Fest/Turnier', 'Fest/Turnier'), ('Schlacht', 'Schlacht'), ('Gesandtschaft/Reise', 'Gesandtschaft/Reise'), ('Taufe', 'Taufe'), ('Amtseinsetzung', 'Amtseinsetzung'), ('Reichstag', 'Reichstag')], help_text='Typ des Ereignisses.', max_length=19, verbose_name='Typ'),
        ),
        migrations.AlterField(
            model_name='function',
            name='alternative_label',
            field=models.TextField(blank=True, help_text='Andere Namen für die Funktion.', null=True, verbose_name='Alternativer Name'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='alternative_label',
            field=models.TextField(blank=True, help_text='Alternativer Name der Institution.', null=True, verbose_name='Alternativer Name'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='type',
            field=models.CharField(blank=True, choices=[('Kanzlei', 'Kanzlei'), ('Hofkapelle', 'Hofkapelle'), ('Küche', 'Küche'), ('(Dom-)Kapitel', '(Dom-)Kapitel'), ('Universität', 'Universität'), ('Kloster', 'Kloster'), ('Frauenzimmer', 'Frauenzimmer'), ('Bistum', 'Bistum'), ('Pfarrei', 'Pfarrei')], help_text='Art der institution.', max_length=13, verbose_name='Typ'),
        ),
        migrations.AlterField(
            model_name='person',
            name='alternative_label',
            field=models.TextField(blank=True, help_text='Feld um alternative Namen anzugeben.', null=True, verbose_name='Alternativer Name'),
        ),
        migrations.AlterField(
            model_name='person',
            name='first_name',
            field=models.CharField(blank=True, help_text='Vorname der Person.', max_length=1024, null=True, verbose_name='Vorname'),
        ),
        migrations.AlterField(
            model_name='person',
            name='gender',
            field=models.CharField(blank=True, choices=[('männlich', 'männlich'), ('weiblich', 'weiblich'), ('unbekannt', 'unbekannt')], help_text='Geschlecht der Person.', max_length=9, verbose_name='Geschlecht'),
        ),
        migrations.AlterField(
            model_name='place',
            name='alternative_label',
            field=models.TextField(blank=True, help_text='Alternativer Name für einen Ort.', null=True, verbose_name='Alternativer Name'),
        ),
        migrations.AlterField(
            model_name='place',
            name='latitude',
            field=models.FloatField(blank=True, help_text='Breitengrad des Ortes. Bei Polygonen wird die Mitte verwendet.', null=True, verbose_name='Breitengrad'),
        ),
        migrations.AlterField(
            model_name='place',
            name='longitude',
            field=models.FloatField(blank=True, help_text='Längengrad des Ortes. Bei Polygonen wird die Mitte verwendet.', null=True, verbose_name='Längengrad'),
        ),
        migrations.AlterField(
            model_name='place',
            name='type',
            field=models.CharField(blank=True, choices=[('Stadt', 'Stadt'), ('Dorf/Nachbarschaft/Gemein/Siedlung/Weiler', 'Dorf/Nachbarschaft/Gemein/Siedlung/Weiler'), ('Burg/Schloss', 'Burg/Schloss'), ('Land/Herrschaftskomplex', 'Land/Herrschaftskomplex'), ('Landschaft/Region', 'Landschaft/Region'), ('Lehen', 'Lehen'), ('Haus/Hof', 'Haus/Hof'), ('Gericht', 'Gericht'), ('Kloster', 'Kloster'), ('Gewässer', 'Gewässer'), ('Grundherrschaft', 'Grundherrschaft'), ('Hofmark', 'Hofmark'), ('Tal', 'Tal'), ('Berg', 'Berg'), ('Bergrevier', 'Bergrevier'), ('Pflege', 'Pflege'), ('(Land-)Vogtei', '(Land-)Vogtei'), ('Propstei', 'Propstei')], help_text='Art des Ortes.', max_length=41, verbose_name='Typ'),
        ),
        migrations.AlterField(
            model_name='salary',
            name='repetitionType',
            field=models.CharField(blank=True, choices=[('einfach', 'einfach'), ('wiederholend', 'wiederholend')], help_text='Typ des Gehalts.', max_length=12, verbose_name='Typ Wiederholungen'),
        ),
        migrations.AlterField(
            model_name='salary',
            name='typ',
            field=models.CharField(blank=True, choices=[('Sold', 'Sold'), ('Zehrung', 'Zehrung'), ('Provision', 'Provision'), ('Kredit', 'Kredit'), ('Sonstiges', 'Sonstiges'), ('Burghut', 'Burghut'), ('Botenlohn', 'Botenlohn')], help_text='Art des Gehalts.', max_length=9, verbose_name='Typ'),
        ),
    ]
